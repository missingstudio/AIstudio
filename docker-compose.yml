version: '3.8'

services:
  gateway:
    container_name: gateway
    image: gateway
    build:
      context: .
      dockerfile: ./docker/Dockerfile.gateway.dev
    command: start  
    depends_on:
      - redis
      - postgres
    environment:
      - GATEWAY_APP_HOST=0.0.0.0
      - GATEWAY_APP_PORT=8080
      - GATEWAY_REDIS_HOST=redis
      - GATEWAY_REDIS_PORT=6379
      - GATEWAY_POSTGRES_URL=postgres://mstudio@postgres:5432/mstudio?sslmode=disable
    ports:
      - 8080:8080

  postgres:
    image: postgres:13
    container_name: postgres
    environment:
      - POSTGRES_DB=mstudio
      - POSTGRES_USER=mstudio
      - POSTGRES_HOST_AUTH_METHOD=trust
    volumes:
      - postgres:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U mstudio" ]
      interval: 30s
      timeout: 30s
      retries: 3

  redis:
    image: redis:7.2-alpine
    container_name: redis
    restart: always
    ports:
      - 6379:6379
    command: redis-server --save 20 1 --loglevel warning
    volumes: 
      - redis:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 1s
      timeout: 3s
      retries: 30

  clickhouse:
    image: clickhouse/clickhouse-server:24.1.5
    container_name: clickhouse
    volumes:
      - clickhouse:/var/lib/clickhouse
    ports:
      - 9000:9000
      - 8123:8123
    restart: always

volumes:
  redis: {}
  postgres: {}
  clickhouse: {}