// @generated by protoc-gen-es v1.6.0 with parameter "target=ts,import_extension="
// @generated from file llm/models.proto (package llm.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3, Struct } from "@bufbuild/protobuf";

/**
 * @generated from message llm.v1.RetryConfig
 */
export class RetryConfig extends Message<RetryConfig> {
  /**
   * @generated from field: string mode = 1;
   */
  mode = "";

  /**
   * @generated from field: string on_status_codes = 2;
   */
  onStatusCodes = "";

  constructor(data?: PartialMessage<RetryConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llm.v1.RetryConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "on_status_codes", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): RetryConfig {
    return new RetryConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): RetryConfig {
    return new RetryConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): RetryConfig {
    return new RetryConfig().fromJsonString(jsonString, options);
  }

  static equals(a: RetryConfig | PlainMessage<RetryConfig> | undefined, b: RetryConfig | PlainMessage<RetryConfig> | undefined): boolean {
    return proto3.util.equals(RetryConfig, a, b);
  }
}

/**
 * @generated from message llm.v1.CacheConfig
 */
export class CacheConfig extends Message<CacheConfig> {
  /**
   * @generated from field: string mode = 1;
   */
  mode = "";

  /**
   * @generated from field: int32 max_age = 2;
   */
  maxAge = 0;

  constructor(data?: PartialMessage<CacheConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llm.v1.CacheConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "max_age", kind: "scalar", T: 5 /* ScalarType.INT32 */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): CacheConfig {
    return new CacheConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): CacheConfig {
    return new CacheConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): CacheConfig {
    return new CacheConfig().fromJsonString(jsonString, options);
  }

  static equals(a: CacheConfig | PlainMessage<CacheConfig> | undefined, b: CacheConfig | PlainMessage<CacheConfig> | undefined): boolean {
    return proto3.util.equals(CacheConfig, a, b);
  }
}

/**
 * @generated from message llm.v1.StrategyConfig
 */
export class StrategyConfig extends Message<StrategyConfig> {
  /**
   * @generated from field: string mode = 1;
   */
  mode = "";

  constructor(data?: PartialMessage<StrategyConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llm.v1.StrategyConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "mode", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): StrategyConfig {
    return new StrategyConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): StrategyConfig {
    return new StrategyConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): StrategyConfig {
    return new StrategyConfig().fromJsonString(jsonString, options);
  }

  static equals(a: StrategyConfig | PlainMessage<StrategyConfig> | undefined, b: StrategyConfig | PlainMessage<StrategyConfig> | undefined): boolean {
    return proto3.util.equals(StrategyConfig, a, b);
  }
}

/**
 * @generated from message llm.v1.GateWayConfig
 */
export class GateWayConfig extends Message<GateWayConfig> {
  /**
   * @generated from field: string name = 1;
   */
  name = "";

  /**
   * @generated from field: string api_key = 2;
   */
  apiKey = "";

  /**
   * @generated from field: string virtual_key = 3;
   */
  virtualKey = "";

  /**
   * @generated from field: string weight = 4;
   */
  weight = "";

  /**
   * @generated from field: llm.v1.RetryConfig retry = 5;
   */
  retry?: RetryConfig;

  /**
   * @generated from field: llm.v1.CacheConfig cache = 6;
   */
  cache?: CacheConfig;

  /**
   * @generated from field: llm.v1.StrategyConfig strategy = 7;
   */
  strategy?: StrategyConfig;

  /**
   * @generated from field: repeated llm.v1.GateWayConfig targets = 8;
   */
  targets: GateWayConfig[] = [];

  /**
   * @generated from field: google.protobuf.Struct metadata = 9;
   */
  metadata?: Struct;

  constructor(data?: PartialMessage<GateWayConfig>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "llm.v1.GateWayConfig";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "name", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 2, name: "api_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 3, name: "virtual_key", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 4, name: "weight", kind: "scalar", T: 9 /* ScalarType.STRING */ },
    { no: 5, name: "retry", kind: "message", T: RetryConfig },
    { no: 6, name: "cache", kind: "message", T: CacheConfig },
    { no: 7, name: "strategy", kind: "message", T: StrategyConfig },
    { no: 8, name: "targets", kind: "message", T: GateWayConfig, repeated: true },
    { no: 9, name: "metadata", kind: "message", T: Struct },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GateWayConfig {
    return new GateWayConfig().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GateWayConfig {
    return new GateWayConfig().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GateWayConfig {
    return new GateWayConfig().fromJsonString(jsonString, options);
  }

  static equals(a: GateWayConfig | PlainMessage<GateWayConfig> | undefined, b: GateWayConfig | PlainMessage<GateWayConfig> | undefined): boolean {
    return proto3.util.equals(GateWayConfig, a, b);
  }
}

